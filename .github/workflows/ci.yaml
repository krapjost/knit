name: CI

on:
  push:
    branches:
      - "main"
    paths:
      - "apps/**"
      - "pkgs/**"
      - ".github/**"
  pull_request:
    types: [opened, synchronize]

jobs:
  build-web:
    name: Build web app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 🔧 Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 17

      - name: 📥 Install pnpm
        uses: ./.github/actions/pnpm-install

      - name: 🚧 Build & Test
        run: pnpm web build && pnpm web test

      - name:  Upload web build
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: dist/web

  deploy-web:
    name: Deploy web app
    needs: build-web
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name:  Download web build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: dist/web

      - name: 🌏 Deploy web
        uses: dswistowski/surge-sh-action@v1.0.1
        with:
          domain: "ps-knot.surge.sh"
          project: "dist/web"
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}

  build-desktop:
    needs: build-web
    name: Build ${{ matrix.platform }} app
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: true
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: 🔧 Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 17

      - name: 📥 Install pnpm
        uses: ./.github/actions/pnpm-install

      - name: 🦀 Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt, rust-src

      - name: Run 'setup-tauri.sh' script
        if: matrix.platform == 'ubuntu-latest' || matrix.platform == 'macos-latest'
        run: ./.github/scripts/setup-tauri.sh

      - name: Run 'setup-tauri.ps1' script
        if: matrix.platform == 'windows-latest'
        run: ./.github/scripts/setup-tauri.ps1 -ci

      - name:  Download web build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: dist/web

      - name: Build Desktop
        run: pnpm desktop build

  create-badge:
    needs: build-web
    name: Create badge
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Count Typescript lines
        run: >-
          echo "ts_loc=$(find .
          -type f
          -not -path './node_modules/**'
          -regex '.*\.\(ts\|tsx\)$'
          -exec grep -c ^ {} \;
          | awk '{total += $1} END{print total}')"
          >> $GITHUB_ENV

      - name: Create Loc Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.BADGE_GIST_SECRET }}
          gistID: ff4c2b4dc91f66a4b5fb2b62059a3c7e
          filename: knot-badges.json
          namedLogo: typescript
          label: LoC
          message: ${{ env.ts_loc }}
          color: blue
